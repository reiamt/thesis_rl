wandb_version: 1

policy_type:
  desc: null
  value: MlpPolicy
total_timesteps:
  desc: null
  value: 500000
env_name:
  desc: null
  value: market-maker-v0
symbol:
  desc: null
  value: XBTUSD
fitting_file:
  desc: null
  value: XBTUSD_20200101_20200102_merge.csv.xz
testing_file:
  desc: null
  value: XBTUSD_2020-01-03.csv.xz
max_position:
  desc: null
  value: 10.0
window_size:
  desc: null
  value: 100
seed:
  desc: null
  value: 1
action_repeats:
  desc: null
  value: 5
training:
  desc: null
  value: true
format_3d:
  desc: null
  value: false
reward_type:
  desc: null
  value: trade_completion
transaction_fee:
  desc: null
  value: true
_wandb:
  desc: null
  value:
    python_version: 3.8.16
    cli_version: 0.15.2
    framework: torch
    is_jupyter_run: false
    is_kaggle_kernel: false
    start_time: 1684693982.68116
    t:
      1:
      - 1
      - 5
      - 53
      - 55
      2:
      - 1
      - 5
      - 53
      - 55
      3:
      - 1
      - 2
      - 3
      - 16
      - 22
      - 23
      - 35
      4: 3.8.16
      5: 0.15.2
      8:
      - 4
      - 5
algo:
  desc: null
  value: DQN
policy_class:
  desc: null
  value: <class 'stable_baselines3.dqn.policies.DQNPolicy'>
device:
  desc: null
  value: cpu
env:
  desc: null
  value: <stable_baselines3.common.vec_env.dummy_vec_env.DummyVecEnv object at 0x135f50ac0>
_vec_normalize_env:
  desc: null
  value: None
verbose:
  desc: null
  value: 1
policy_kwargs:
  desc: null
  value: '{}'
num_timesteps:
  desc: null
  value: 0
_total_timesteps:
  desc: null
  value: 500000
_num_timesteps_at_start:
  desc: null
  value: 0
action_noise:
  desc: null
  value: None
start_time:
  desc: null
  value: 1684693991324950000
learning_rate:
  desc: null
  value: 0.0001
tensorboard_log:
  desc: null
  value: runs/p8v716ec
lr_schedule:
  desc: null
  value: <function constant_fn.<locals>.func at 0x14186e670>
_last_obs:
  desc: null
  value: "[[[ 2.5461397   0.84226555  2.9432187  ...  0.          0.\n    0.     \
    \   ]\n  [ 2.5204964   0.83288145  2.9100106  ...  0.          0.\n    0.    \
    \    ]\n  [ 2.4951096   0.82360274  2.8759832  ...  0.          0.\n    0.   \
    \     ]\n  ...\n  [-0.17511122  0.25853667  0.79675555 ...  0.          0.\n \
    \   0.        ]\n  [-0.17354207  0.25499693  0.7827296  ...  0.          0.\n\
    \    0.        ]\n  [-0.17198859  0.25148728  0.76884407 ...  0.          0.\n\
    \    0.        ]]]"
_last_episode_starts:
  desc: null
  value: '[ True]'
_last_original_obs:
  desc: null
  value: None
_episode_num:
  desc: null
  value: 0
use_sde:
  desc: null
  value: 'False'
sde_sample_freq:
  desc: null
  value: -1
_current_progress_remaining:
  desc: null
  value: 1
_stats_window_size:
  desc: null
  value: 100
ep_info_buffer:
  desc: null
  value: deque([], maxlen=100)
ep_success_buffer:
  desc: null
  value: deque([], maxlen=100)
_n_updates:
  desc: null
  value: 0
_logger:
  desc: null
  value: <stable_baselines3.common.logger.Logger object at 0x14186be80>
_custom_logger:
  desc: null
  value: 'False'
observation_space:
  desc: null
  value: "Box([[-10. -10. -10. ... -10. -10. -10.]\n [-10. -10. -10. ... -10. -10.\
    \ -10.]\n [-10. -10. -10. ... -10. -10. -10.]\n ...\n [-10. -10. -10. ... -10.\
    \ -10. -10.]\n [-10. -10. -10. ... -10. -10. -10.]\n [-10. -10. -10. ... -10.\
    \ -10. -10.]], [[10. 10. 10. ... 10. 10. 10.]\n [10. 10. 10. ... 10. 10. 10.]\n\
    \ [10. 10. 10. ... 10. 10. 10.]\n ...\n [10. 10. 10. ... 10. 10. 10.]\n [10. 10.\
    \ 10. ... 10. 10. 10.]\n [10. 10. 10. ... 10. 10. 10.]], (100, 174), float32)"
action_space:
  desc: null
  value: Discrete(17)
n_envs:
  desc: null
  value: 1
buffer_size:
  desc: null
  value: 10000
batch_size:
  desc: null
  value: 32
learning_starts:
  desc: null
  value: 50000
tau:
  desc: null
  value: 1.0
gamma:
  desc: null
  value: 0.99
gradient_steps:
  desc: null
  value: 1
optimize_memory_usage:
  desc: null
  value: 'False'
replay_buffer_class:
  desc: null
  value: <class 'stable_baselines3.common.buffers.ReplayBuffer'>
replay_buffer_kwargs:
  desc: null
  value: '{}'
_episode_storage:
  desc: null
  value: None
train_freq:
  desc: null
  value: 'TrainFreq(frequency=4, unit=<TrainFrequencyUnit.STEP: ''step''>)'
actor:
  desc: null
  value: None
replay_buffer:
  desc: null
  value: <stable_baselines3.common.buffers.ReplayBuffer object at 0x141670fa0>
use_sde_at_warmup:
  desc: null
  value: 'False'
exploration_initial_eps:
  desc: null
  value: 1.0
exploration_final_eps:
  desc: null
  value: 0.05
exploration_fraction:
  desc: null
  value: 0.1
target_update_interval:
  desc: null
  value: 10000
_n_calls:
  desc: null
  value: 0
max_grad_norm:
  desc: null
  value: 10
exploration_rate:
  desc: null
  value: 0.0
policy:
  desc: null
  value: "DQNPolicy(\n  (q_net): QNetwork(\n    (features_extractor): FlattenExtractor(\n\
    \      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (q_net): Sequential(\n\
    \      (0): Linear(in_features=17400, out_features=64, bias=True)\n      (1):\
    \ ReLU()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n    \
    \  (3): ReLU()\n      (4): Linear(in_features=64, out_features=17, bias=True)\n\
    \    )\n  )\n  (q_net_target): QNetwork(\n    (features_extractor): FlattenExtractor(\n\
    \      (flatten): Flatten(start_dim=1, end_dim=-1)\n    )\n    (q_net): Sequential(\n\
    \      (0): Linear(in_features=17400, out_features=64, bias=True)\n      (1):\
    \ ReLU()\n      (2): Linear(in_features=64, out_features=64, bias=True)\n    \
    \  (3): ReLU()\n      (4): Linear(in_features=64, out_features=17, bias=True)\n\
    \    )\n  )\n)"
q_net:
  desc: null
  value: "QNetwork(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1,\
    \ end_dim=-1)\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=17400,\
    \ out_features=64, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=64,\
    \ out_features=64, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=64,\
    \ out_features=17, bias=True)\n  )\n)"
q_net_target:
  desc: null
  value: "QNetwork(\n  (features_extractor): FlattenExtractor(\n    (flatten): Flatten(start_dim=1,\
    \ end_dim=-1)\n  )\n  (q_net): Sequential(\n    (0): Linear(in_features=17400,\
    \ out_features=64, bias=True)\n    (1): ReLU()\n    (2): Linear(in_features=64,\
    \ out_features=64, bias=True)\n    (3): ReLU()\n    (4): Linear(in_features=64,\
    \ out_features=17, bias=True)\n  )\n)"
batch_norm_stats:
  desc: null
  value: '[]'
batch_norm_stats_target:
  desc: null
  value: '[]'
exploration_schedule:
  desc: null
  value: <function get_linear_fn.<locals>.func at 0x14186e940>
